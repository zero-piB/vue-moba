//reset
*{
    box-sizing: border-box;
    outline: none;
}

html{
    font-size: 13px;
}

body{
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}

a{
    color: #999;
}

$colors:(
    "primary":#db9e3f,
    "white":#fff,
    "light":#f9f9f9,
    "dark-1": #343440,
    "dark":#222,
    "black":#000
);

//color
@each $colorKey, $color in $colors {
    .text-#{$colorKey}{
        color: $color;
    }
    .bg-#{$colorKey}{
        color: $color;
    }
}

//text-align
@each $var in (left, center, right) {
    .text-#{$var}{
        text-align: $var;
    }
}

// font-size
// $base-font-size:1rem;  //13px
$font-size:(
    xs:0.7692rem,  //10px
    sm:0.9231rem, //12px
    md:1rem,        //13px
    lg:1.0769rem,   //14px
    xg:1.2308rem,   //16px
);
@each $font-size-key, $f-size in $font-size{
    .fs-#{$font-size-key}{
        font-size: $f-size;
    }
}

//flex
.d-flex{
    display: flex;
}
//1.主轴方向
.flex-column{
    flex-direction: column;
}
//2. 换行
.flex-wrap{
    flex-wrap: wrap;
}
//3. 项目在主轴上的对其方式,justify-content
$jc-flex:(
    start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around,
);

@each $jcKey, $jc in $jc-flex {
    .jc-#{$jcKey}{
        justify-content: $jc;
    }
}
//4.项目在交叉轴上的对其方式
$ai:(
    start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch
);

@each $aiKey, $ai in $ai {
    .ai-#{$aiKey}{
        align-items: $ai;
    }
}

//5. 轴线对齐方式align-content
$ac-flex:(
    start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around,
    stretch:stretch
);

@each $acKey, $ac in $ac-flex {
    .ac-#{$acKey}{
        align-content: $ac;
    }
}

// 6.伸缩
.flex-1{
    flex:1;
}
.flex-grow-1{
    flex-grow: 1;
}


//spacing 0-5 level
$base-spacing-size:1rem;
$spacing-types:(
    m:maring,
    p:pading
);
$spacing-direction:(
    l:left,
    r:right,
    b:bottom,
    t:top,
);

// m-0, mx-0,  mt-0 three types
$spacing-sizes:(0 : 0, 1: 0.25, 2: 0.5, 3: 1, 4: 1.5, 5: 3.0);
@each $level, $size in $spacing-sizes {
    //m-0
    @each $typeKey, $type in $spacing-types{
        .#{$typeKey}-#{$level}{
            #{$type}:$size*$base-spacing-size
        }
    }
    //mx-0,my-0
    @each $typeKey, $type in $spacing-types{
        .#{$typeKey}x-#{$level}{
            #{$type}:auto $size*$base-spacing-size
        }
        .#{$typeKey}y-#{$level}{
            #{$type}:$size*$base-spacing-size auto 
        }
    }
    //mt-0
    @each $typeKey, $type in $spacing-types{
        @each $directionKey, $direction in $spacing-direction{
            .#{$typeKey}#{$directionKey}-#{$level}{
                #{$type}-#{$direction}:$size*$base-spacing-size
            }
        }
    }
    
}